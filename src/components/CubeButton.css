.cube-button {
  width: 100%;
  height: 100%;
  position: relative;
  transition: transform 0.6s;
  transform-style: preserve-3d;
  cursor: pointer;
}

.cube-button.flipped {
  transform: rotateX(-90deg);
}

/* Add glow effect for practice mode */
.game-container.practice .cube-button:not(.game-ended) .cube-face {
  animation: practiceGlow 2s ease-in-out infinite;
}

.cube-button.game-ended {
  pointer-events: none;
  transform: rotateX(-180deg);  /* Flip to show bottom face */
}

.cube-face {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
}

.cube-face.front {
  transform: rotateX(90deg) translateZ(30px);
}

.cube-face.top {
  transform: rotateX(0deg) translateZ(30px);
}

.cube-face.bottom {
  transform: rotateX(180deg) translateZ(30px);
}

.cube-image {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

/* Color classes for different notes */
.cube-button.red { background-color: red; }
.cube-button.orange { background-color: orange; }
.cube-button.yellow { background-color: yellow; }
.cube-button.green { background-color: green; }
.cube-button.lightblue { background-color: lightblue; }
.cube-button.blue { background-color: blue; }
.cube-button.purple { background-color: purple; }

/* Game ended state */
.cube-button.game-ended .cube-face {
  background-color: transparent;
}

/* Hover effect (disabled for game-ended state) */
.cube-button:not(.game-ended):hover {
  transform: scale(1.05);
}

/* Ensure flipped state is maintained on hover */
.cube-button.flipped:not(.game-ended):hover {
  transform: rotateX(-90deg) scale(1.05);
}

/* Active effect (disabled for game-ended state) */
.cube-button:not(.game-ended):active {
  transform: scale(0.95);
}

/* Ensure flipped state is maintained when active */
.cube-button.flipped:not(.game-ended):active {
  transform: rotateX(-90deg) scale(0.95);
}

/* Transition for smooth animation */
.cube-button, .cube-face {
  transition: all 0.3s ease;
}

