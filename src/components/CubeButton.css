.cube-button {
  width: 60px;
  height: 60px;
  position: relative;
  display: block;
  transform-style: preserve-3d;
  cursor: pointer;
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  touch-action: manipulation;
  user-select: none;
  -webkit-user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
  transition: transform 0.3s ease;
}

.cube-button:focus {
  outline: none; /* Remove default focus outline */
}

.cube-button:focus-visible {
  /* Add custom focus indicator that doesn't interfere with the 3D effect */
  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.6);
  border-radius: 4px;
}

.cube-face {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: transparent;
  transition: all 0.3s ease;
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
}

.cube-face.front {
  transform: translateZ(30px);
}

.cube-face.bottom {
  transform: rotateX(180deg) translateZ(30px);
}

.cube-image {
  width: 100%;
  height: 100%;
  object-fit: contain;
  background-color: transparent;
  pointer-events: none;
  user-select: none;
  -webkit-user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
}

/* Game ended state */
.cube-button:disabled,
.cube-button.game-ended {
  pointer-events: none;
  transform: rotateX(-180deg);
}

/* Practice mode glow effect */
.game-container.practice .cube-button:not(:disabled):not(.game-ended) .cube-face {
  animation: practiceGlow 2s ease-in-out infinite;
}

/* Hover and pressed states */
@media (hover: hover) and (pointer: fine) {
  .cube-button:not(:disabled):not(.game-ended):hover {
    transform: scale(1.05);
  }
}

/* Touch-specific active state */
@media (hover: none) {
  .cube-button:not(:disabled):not(.game-ended):active,
  .cube-button.pressed:not(:disabled):not(.game-ended) {
    transform: scale(0.95);
    transition: transform 0.1s ease-in-out;
  }
}

/* Default active state */
.cube-button:not(:disabled):not(.game-ended):active,
.cube-button.pressed:not(:disabled):not(.game-ended) {
  transform: scale(0.95);
  transition: transform 0.1s ease-in-out;
}

/* Remove hover effects on touch devices */
@media (hover: none) {
  .cube-button:hover {
    transform: none;
  }
  
  .cube-button:not(:disabled):not(.game-ended):hover {
    transform: none;
  }
}

/* Active state for touch */
.cube-button:not(:disabled):not(.game-ended):active,
.cube-button.pressed:not(:disabled):not(.game-ended) {
  transform: scale(0.95) !important;
}